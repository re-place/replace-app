[versions]
exposed = "0.41.1"
kotlin = "1.8.10"
ktor = "2.2.4"
liquibase = "2.1.1"
liquibase-core = "4.20.0"
liquibase-picocli = "4.7.0"
log4j = "2.20.0"
postgresql = "42.5.4"
tegral = "0.0.3"

[libraries]
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
guice = "com.google.inject:guice:5.1.0"
kotest = "io.kotest:kotest-runner-junit5-jvm:5.5.5"
kotlinx-coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.4.0"
kotlinx-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0"
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase-core" }
liquibase-picocli = { module = "info.picocli:picocli", version.ref = "liquibase-picocli" }
logging-api = "org.slf4j:slf4j-api:1.7.36"
logging-impl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
logging-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
postgrsql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
tegral-openapi-base = { module = "guru.zoroark.tegral:tegral-openapi-ktor", version.ref = "tegral" }
tegral-openapi-swagger = { module = "guru.zoroark.tegral:tegral-openapi-ktorui", version.ref = "tegral" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktlint = "org.jlleitschuh.gradle.ktlint:11.3.1"
liquibase = { id = "org.liquibase.gradle", version.ref = "liquibase" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor"}
